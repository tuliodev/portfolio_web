{
    "About": "Sobre",
    "Skills": "Habilidades",
    "Experience": "Experiência",
    "Projects": "Projetos",
    "Contact": "Contato",
    "AboutText": "Olá! Sou Tulio, um apaixonado Desenvolvedor Fullstack baseado no Brasil com mais de 4 anos de experiência na indústria de tecnologia. Minha especialização está na criação de aplicações web robustas e inovadoras usando tecnologias de ponta.",
    "VCS": "Versionamento",
    "Role": "Desenvolvedor Fullstack",
    "AdrianoCourbuccioDescription": "Dentro do grupo Adriano Corbuccio, tive o privilégio de participar de iniciativas transformadoras no banco BrasilCard. Minha função abrangeu não apenas impulsionar projetos internos, mas também revitalizar sistemas legados migrando-os para tecnologias de ponta.",
    "WejamDescription": "Durante meu período na agência WeJam, tive a oportunidade de participar de projetos backend que tiveram um impacto positivo em nossos clientes externos. Adotei uma abordagem focada em tecnologias de ponta, utilizando Node.js com TypeScript, e princípios de Desenvolvimento Orientado a Testes (TDD) e Design Orientado a Domínio (DDD).",
    "PhootoDescription": "Durante meu tempo na Phooto, tive o privilégio de contribuir para projetos internos da empresa. Utilizei React.js e JavaScript para criar soluções impactantes. O compromisso da Phooto com a inovação e a excelência proporcionou um ambiente ideal para aproveitar essas tecnologias e entregar resultados de alta qualidade.",
    "DaoProjectDescription": "Fiz um projeto de um DAPP com organização autônoma descentralizada no qual consiste em um sistema feito na blockchain, onde as pessoas podem comprar tokens e com esses tokens elas têm o poder de voto onde o administrador consegue criar propostas para os donos dos tokens votarem.<br>&nbsp;<br>Para fazer esse sistema utilizei algumas tecnologias como hardhat, solidity, ethers, nodejs, graphql, nextjs e tailwind css para o front-end.<br>&nbsp;<br>Para executar as propostas quando os votos mínimos forem atingidos e ela for aprovada eu criei uma cron utilizando a biblioteca node-cron do nodejs.",
    "DocworkingProjectDescription": "Contribuí para o desenvolvimento do DocWorking, um projeto inovador na agência WeJam, com foco em revolucionar a indústria de saúde.<br>&nbsp;<br> A plataforma visava conectar profissionais de saúde a espaços de clínicas subutilizados, oferecendo uma solução eficiente projetada especificamente para praticantes na área.<br>&nbsp;<br> Nesse papel, especializei-me no desenvolvimento de backend, garantindo a entrega de aplicações robustas e escaláveis.<br>&nbsp;<br> Minhas responsabilidades incluíram a criação de APIs eficientes e de fácil manutenção, participação ativa em revisões de código e implementação de processos de integração contínua e implantação.<br>&nbsp;<br> O projeto utilizou tecnologias de ponta, empregando React para interfaces de usuário dinâmicas, TypeScript para codificação robusta e Node.js para operações eficientes no servidor.<br>&nbsp;<br> A aplicação seguiu um design orientado a domínio para garantir uma arquitetura escalável. A AWS foi utilizada para fornecer uma infraestrutura de nuvem segura, e o Docker simplificou o processo de implantação.",
    "BinanceSocketProjectDescription": "Em resposta a um recente desafio de codificação, desenvolvi uma aplicação envolvente para gerenciar as atualizações de preços via websocket da Binance. Esse projeto, iniciado ao criar um fork de um repositório e submeter um pull request para revisão, teve como objetivo destacar minhas habilidades em integração de APIs e manipulação de dados em tempo real.<br>&nbsp;<br>A aplicação consome de maneira eficiente o endpoint da API da Binance (GET https://data.binance.com/api/v3/exchangeInfo) para exibir informações relevantes. Uma de suas funcionalidades intuitivas permite que os usuários criem e gerenciem facilmente uma lista de símbolos. Essa lista, por sua vez, facilita a adição de símbolos a uma lista de observação, proporcionando aos usuários atualizações em tempo real sobre o último preço, melhor preço de compra, melhor preço de venda e percentual de mudança de preço.<br>&nbsp;<br>Um aspecto crucial da aplicação está na criação de uma conexão WebSocket usando os símbolos selecionados pelos usuários, garantindo atualizações quase instantâneas. A URL do WebSocket usada para esse propósito é wss://data-stream.binance.com/stream?streams={symbol}/{symbol} (Exemplo: wss://data-stream.binance.com/stream?streams=ethbtc/bnbbtc).<br>&nbsp;<br>Este projeto serve como uma evidência de minha proficiência em trabalhar com APIs, implementar conexões WebSocket e criar uma interface intuitiva para acompanhar dados de preços ao vivo na plataforma da Binance. A incorporação de atualizações quase em tempo real aprimora significativamente a experiência global do usuário."
}

