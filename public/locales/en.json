{
    "About": "About",
    "Skills": "Skills",
    "Experience": "Experience",
    "Projects": "Projects",
    "Contact": "Contact",
    "AboutText": "Hello! I'm Tulio, a passionate Fullstack Developer based in Brazil with over 4 years of experience in the technology industry. My specialization is in creating robust and innovative web applications using cutting-edge technologies, I am enthusiastic in the area of blockchain development with some projects done.",
    "VCS":  "Version Control System",
    "Role": "Fullstack Developer",
    "AdrianoCourbuccioDescription": "Within the Adriano Corbuccio group, I had the privilege of participating in transformative initiatives at Banco BrasilCard. My role not only involved driving internal projects but also revitalizing legacy systems by migrating them to cutting-edge technologies.",
    "WejamDescription": "During my time at WeJam agency, I had the opportunity to participate in backend projects that had a positive impact on our external clients. I adopted an approach focused on cutting-edge technologies, using Node.js with TypeScript, and principles of Test-Driven Development (TDD) and Domain-Driven Design (DDD).",
    "PhootoDescription": "During my time at Phooto, I had the privilege of contributing to internal projects of the company. I utilized React.js and JavaScript to create impactful solutions. Phooto's commitment to innovation and excellence provided an ideal environment to leverage these technologies and deliver high-quality results.",
    "DaoProjectDescription": "I created a DAPP project with an autonomous decentralized organization which consists of a system made on the blockchain, where people can buy tokens and with these tokens they have the power to vote where the administrator can create proposals for the token owners to vote on.<br>&nbsp;<br>To create this system I used some technologies such as hardhat, solidity, ethers, nodejs, graphql, nextjs and tailwind css for the front-end.<br>&nbsp;<br>To execute the proposals when the minimum votes are reached and it is approved, I created a cron using the nodejs node-cron library.",
    "DocworkingProjectDescription": "I contributed to the development of DocWorking, a groundbreaking project at WeJam agency, focused on revolutionizing the healthcare industry.<br>&nbsp;<br> The platform aimed to connect healthcare professionals with underutilized clinic spaces, providing a streamlined solution designed specifically for practitioners in the field.<br>&nbsp;<br> In this role, I specialized in backend development, ensuring the delivery of robust and scalable applications.<br>&nbsp;<br> My responsibilities included creating efficient and maintainable APIs, actively participating in code reviews, and implementing continuous integration and deployment processes.<br>&nbsp;<br> The project utilized cutting-edge technologies, employing React for dynamic user interfaces, TypeScript for robust coding, and Node.js for efficient server-side operations.<br>&nbsp;<br> The application followed a domain-driven design to guarantee a scalable architecture. AWS was leveraged to provide a secure cloud infrastructure, and Docker streamlined the deployment process.",
    "BinanceSocketProjectDescription": "In response to a recent coding challenge, I developed a compelling mini-application designed to manage Binance websocket pricing updates. This project, initiated by forking a repository and submitting a pull request for review, aimed to showcase my skills in API integration and real-time data handling.<br>&nbsp;<br>The application seamlessly consumes the Binance API endpoint (GET https://data.binance.com/api/v3/exchangeInfo) to display relevant information. One of its user-friendly features allows users to effortlessly create and manage a list of symbols. This list, in turn, facilitates the addition of symbols to a watchlist, providing users with real-time updates on last price, best bid price, best ask price, and price change percentage.<br>&nbsp;<br>A crucial aspect of the application lies in its establishment of a WebSocket connection using user-selected symbols, ensuring nearly instantaneous updates. The WebSocket URL used for this purpose is wss://data-stream.binance.com/stream?streams={symbol}/{symbol} (Example: wss://data-stream.binance.com/stream?streams=ethbtc/bnbbtc).<br>&nbsp;<br>This project serves as a testament to my proficiency in working with APIs, implementing WebSocket connections, and crafting an intuitive interface for tracking live pricing data on the Binance platform. The incorporation of near real-time updates significantly enhances the overall user experience."
}